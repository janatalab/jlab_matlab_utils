subj = '024_a_';
freq_flag = 0;   %  set to zero if you don't have resting blocks
mod_flag = 1;    % set to 0 if there are no modulation runs
task_flag = 0;   % set to zero if there is no task data
eceo_flag = 1;        % set to zero if there is no eyes closed eyes open data
reference = 'average';
% run params
add_bad_chan = [17 126 125 120 114 108 100 95 89 82 74 69 63 56 49 44 128 127];
windows = [];
freqs = [4 5 6 12]7 8 9 10 12 14 16 18 20];
mod_freqs = [12];
mod_depths = [75 80 85 90 95];
task_freqs = [8 12];
task_name = 'gng_';
noffset = 0;
nsamp = 250;
cells = [1;2;3;4;5;6];
bad_chans = [18 121 56 69 89 90 56 54 18];
if freq_flag > 0

for i = 1:size(freqs,2)
	if freqs(i) >= 10
		datafile = [subj int2str(freqs(i)) 'r00.EEG.RAW'];
		run_ns_edit(2,120,100,datafile);
		run_eeg_csdm(datafile,[],[],reference);
	else
		datafile = [subj '0' int2str(freqs(i)) 'r00.EEG.RAW'];
		run_ns_edit(2,120,100,datafile);
		run_eeg_csdm(datafile,[],[],reference);
	end;
end;
end; 
if eceo_flag > 0
	datafile = [subj 'ecr00.EEG.RAW'];
	run_ns_edit(2,120,100,datafile);
	run_eeg_csdm(datafile,[],[],reference);
	datafile = [subj 'eor00.EEG.RAW'];
	run_ns_edit(2,120,100,datafile);
	run_eeg_csdm(datafile,[],[],reference);
end;

if mod_flag > 0
for i = 1:size(mod_freqs,2)
	if mod_freqs(i) >= 10
		for j = 1:size(mod_depths,2)
		datafile = [subj int2str(mod_freqs(i)) 'm' int2str(mod_depths(j)) '.EEG.RAW'];
		run_ns_edit(2,120,100,datafile);
		run_eeg_csdm(datafile,[],[],reference);
		end;
	else
		for j= 1:size(mod_depths,2)
		datafile = [subj '0' int2str(mod_freqs(i)) 'm' int2str(mod_depths(j)) '.EEG.RAW'];
		run_ns_edit(2,120,100,datafile);
		run_eeg_csdm(datafile,[],[],reference);
		end;
	end;
end;
end;
if task_flag > 0
for i = 1:size(task_freqs,2)
	if task_freqs(i) >= 10
		datafile = [task_name subj int2str(task_freqs(i)) '.ses'];
		run_csdm_2eeg(noffset,nsamp,cells,[bad_chans add_bad_chan],datafile,reference);
	else
		datafile = [task_name subj '0' int2str(task_freqs(i)) '.ses'];
		run_csdm_2eeg(noffset,nsamp,cells,[bad_chans add_bad_chan],datafile,reference);
	end;
end;
end;
	







